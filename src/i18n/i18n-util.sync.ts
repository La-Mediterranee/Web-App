// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */

import { initFormatters } from './formatters'
import type { Locales, Translations } from './i18n-types'
import { loadedFormatters, loadedLocales, locales } from './i18n-util'

import ar from './ar'
import de from './de'
import en from './en'

import ar_checkout from './ar/checkout'
import ar_errors from './ar/errors'
import ar_user from './ar/user'
import de_checkout from './de/checkout'
import de_errors from './de/errors'
import de_user from './de/user'
import en_checkout from './en/checkout'
import en_errors from './en/errors'
import en_user from './en/user'

const localeTranslations = {
	ar: {
		...ar,
		checkout: ar_checkout,
		errors: ar_errors,
		user: ar_user
	},
	de: {
		...de,
		checkout: de_checkout,
		errors: de_errors,
		user: de_user
	},
	en: {
		...en,
		checkout: en_checkout,
		errors: en_errors,
		user: en_user
	},
}

export const loadLocale = (locale: Locales) => {
	if (loadedLocales[locale]) return

	loadedLocales[locale] = localeTranslations[locale] as unknown as Translations
	loadFormatters(locale)
}

export const loadAllLocales = () => locales.forEach(loadLocale)

export const loadFormatters = (locale: Locales) => {
	loadedFormatters[locale] = initFormatters(locale)
}
